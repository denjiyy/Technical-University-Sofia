@startuml
class Търговец {
  + ЕИК: String
  + Наименование: String
  + Адрес: String
  + Стоки: List<Стока>
  + регистрирай(): void
  + добавиСтока(стока: Стока): void
  + одобриПокупка(покупка: Покупка): void
  + дерегистрирай(): void
}

class Потребител {
  + Потребителско_име: String
  + Парола: String
  + Имена: String
  + Адреси_за_доставка: List<String>
  + Дебитни_кредитни_карти: List<String>
  + Направени_покупки: List<Покупка>
  + регистрирай(): void
  + разгледайСтоки(): List<Стока>
  + добавиВКоличка(стока: Стока): void
  + заплати(): void
  + оцени(продукт: Продукт, доставка: Доставка): void
  + дерегистрирай(): void
}

class Доставчик {
  + Потребителско_име: String
  + Парола: String
  + Цена_на_доставка: Double
  + Градове: List<String>
  + График: String
  + регистрирай(): void
  + потвърдиДоставка(доставка: Доставка): void
  + получиСписъкСДоставки(): List<Доставка>
  + отчетиДоставка(доставка: Доставка): void
}

class Администратор {
  + проследиПроцеси(): List<Процес>
  + деактивирайАкаунт(акаунт: Акаунт): void
  + създайОдитиращАкаунт(одитор: Одитор): void
}

class Одитор {
  + инициирайОдит(търговец: Търговец): Одит
}

class Стока {
  + Наименование: String
  + Описание: String
  + Снимки: List<String>
  + Цена: Double
  + Отстъпка: Double
}

class Покупка {
  + Стока: Стока
  + Брой: Int
}

class Продукт {
  + Стока: Стока
  + Оценка: Double
}

class Доставка {
  + Покупка: Покупка
  + Оценка: Double
}

class Акаунт {
  + Потребителско_име: String
  + Парола: String
}

class Одит {
  + Търговец: Търговец
  + Продажби: List<Продажба>
  + Дължимо_ДДС: Double
}

Търговец "1" -- "0..*" Стока : предлага >
Потребител "1" -- "0..*" Покупка : прави >
Потребител "1" -- "0..*" Продукт : оценява >
Потребител "1" -- "0..*" Доставка : оценява >
Доставчик "1" -- "0..*" Доставка : доставя >
Администратор "1" -- "0..*" Акаунт : деактивира >
Администратор "1" -- "0..*" Одитор : създава >
Одитор "1" -- "0..*" Одит : инициира >
@enduml
